[
  {
    "objectID": "germany.html",
    "href": "germany.html",
    "title": "5  Accommodation in Germany",
    "section": "",
    "text": "we are leaving the end of sequences as a “void” (Not NA) to be able to categorize end-point as “last known”\nwe restructure the categorisation of accommodation to do not have “other” as one of the main category but rather operate with theory-based categories, new categories are following:\n\n\nBLUE COLOR: government supported\nRED COLOR: temporary/dependent: (volunteer + ngo + collective centers + hostels + family/friends + employer)\nGREEN COLOR: self-sufficient (rented + own)\nYELLOW COLOR: in Ukraine\nVIOLET COLOR: in other country\n\n\nlibrary(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(TraMineR)\n\n\nTraMineR stable version 2.2-10 (Built: 2024-05-22)\n\n\nWebsite: http://traminer.unige.ch\n\n\nPlease type 'citation(\"TraMineR\")' for citation information.\n\nlibrary(TraMineRextras)\n\nTraMineRextras stable version 0.6.7 (Built: 2024-04-27)\n\n\nFunctions provided by this package are still in test\n\n\n    and subject to changes in future releases.\n\nlibrary(seqimpute)\n\nwide &lt;- readRDS(\"wide-accomm-2.rds\")\n\n## Impute internal gaps\nsequence &lt;- seqimpute(\n  wide, var = 6:9, m = 1, timing = TRUE,\n  npt = 0, nfi = 0\n)\n\niteration : 1 / 1 \n[1] \"Imputation of the internal gaps...\"\n[1] \"Step 1/2\"\n[1] \"Step 2/2\"\n\n### Sequence Mining\nsequence.alphabet &lt;- c(\n  'government supported',\n  'temporary/dependent',\n  'self-sufficient',\n  'in Ukraine',\n  'in other country'\n)\n\nsequence.scode &lt;- c(\n  \"GOVSUP\",\n  \"TMPDEP\",\n  \"SLFSUF\",\n  \"IN.UKR\",\n  \"IN.OTH\"\n)\n\nsequence.lab &lt;- c(\n  'government supported',\n  'temporary/dependent',\n  'self-sufficient',\n  'in Ukraine',\n  'in other country'\n)\n\n## \nsequence.seq &lt;- seqdef(\n  data = sequence$imp$imp1,\n  var = 1:4,\n  alphabet = sequence.alphabet,\n  states = sequence.scode,\n  labels = sequence.lab,\n  cnames = c(\"R4\", \"R10\", \"R16\", \"R10/11\"),\n  # cnames = 1:4,\n  xtstep = 1,\n  cpal = c(\"blue\", \"red\", \"green\", \"yellow\", \"violet\"),\n  left = NA,\n  right = \"DEL\"\n)\n\n [!] found '-' character in state codes, not recommended\n\n\n [&gt;] found missing values ('NA') in sequence data\n\n\n [&gt;] preparing 1193 sequences\n\n\n [&gt;] coding void elements with '%' and missing values with '*'\n\n\n [!!] 4 empty sequence(s) with index: 8,486,644,1193\n      may produce inconsistent results.\n\n\n [&gt;] state coding:\n\n\n       [alphabet]           [label]  [long label] \n\n\n     1  government supported GOVSUP   government supported\n\n\n     2  temporary/dependent  TMPDEP   temporary/dependent\n\n\n     3  self-sufficient      SLFSUF   self-sufficient\n\n\n     4  in Ukraine           IN.UKR   in Ukraine\n\n\n     5  in other country     IN.OTH   in other country\n\n\n [&gt;] 1193 sequences in the data set\n\n\n [&gt;] min/max sequence length: 0/4\n\n## 25 Most frequent sequences\nseqtab(\n  sequence.seq, idxs = 1:25\n)\n\n                      Freq Percent\n*/1-GOVSUP/3           133   11.15\n*/3-GOVSUP/1           120   10.06\n*/1-GOVSUP/1            54    4.53\n*/2-GOVSUP/2            51    4.27\n*/1-SLFSUF/1-GOVSUP/2   44    3.69\nTMPDEP/1                44    3.69\n*/1-GOVSUP/2            42    3.52\n*/2-GOVSUP/1            37    3.10\nGOVSUP/1                31    2.60\n*/1-SLFSUF/3            28    2.35\n*/1-SLFSUF/1            27    2.26\n*/1-TMPDEP/1            26    2.18\n*/3-SLFSUF/1            26    2.18\n*/1-TMPDEP/3            25    2.10\n*/3-TMPDEP/1            24    2.01\n*/2-TMPDEP/2            18    1.51\n*/1-TMPDEP/1-IN.UKR/2   16    1.34\n*/1-TMPDEP/1-GOVSUP/2   15    1.26\nGOVSUP/4                15    1.26\nSLFSUF/1                14    1.17\nTMPDEP/1-GOVSUP/3       14    1.17\n*/1-GOVSUP/1-IN.UKR/2   13    1.09\n*/2-TMPDEP/1            13    1.09\n*/1-SLFSUF/1-GOVSUP/1   10    0.84\n*/1-TMPDEP/2            10    0.84\n\nseqplot(\n  seqdata = sequence.seq,\n  type = \"f\",\n  idxs = 1:25,\n  with.legend = FALSE, border = FALSE,\n  cex.axis = 0.65,\n  main = \"25 most frequent sequences\"\n)\n\n\n\n\n\n\n\n# Sorted by end state\nseqplot(\n  seqdata = sequence.seq,\n  type = \"I\",\n  idxs = 0,\n  with.legend = FALSE,\n  sortv = sortv(sequence.seq, start = \"end\"),\n  cex.axis = 0.65,\n  main = \"Sequences sorted by endings\"\n)\n\n\n\n\n\n\n\n\nSame information, but presented in a frequency table:\n\ndf &lt;- data.frame(table(sequence.seq))\n\nknitr::kable(\n  x = df %&gt;% filter(Freq &gt; 4),\n  caption = \"Sequences sorted by end state\"\n)\n\n\nSequences sorted by end state\n\n\nR4\nR10\nR16\nR10.11\nFreq\n\n\n\n\nGOVSUP\nGOVSUP\nGOVSUP\nGOVSUP\n15\n\n\nTMPDEP\nGOVSUP\nGOVSUP\nGOVSUP\n14\n\n\nSLFSUF\nGOVSUP\nGOVSUP\nGOVSUP\n5\n\n\n*\nGOVSUP\nGOVSUP\nGOVSUP\n133\n\n\nTMPDEP\nTMPDEP\nGOVSUP\nGOVSUP\n6\n\n\nIN.OTH\nTMPDEP\nGOVSUP\nGOVSUP\n5\n\n\n*\nTMPDEP\nGOVSUP\nGOVSUP\n15\n\n\nTMPDEP\nSLFSUF\nGOVSUP\nGOVSUP\n5\n\n\nSLFSUF\nSLFSUF\nGOVSUP\nGOVSUP\n8\n\n\n*\nSLFSUF\nGOVSUP\nGOVSUP\n44\n\n\n*\n*\nGOVSUP\nGOVSUP\n51\n\n\n*\nTMPDEP\nTMPDEP\nGOVSUP\n7\n\n\n*\n*\n*\nGOVSUP\n120\n\n\nTMPDEP\nTMPDEP\nTMPDEP\nTMPDEP\n8\n\n\n*\nTMPDEP\nTMPDEP\nTMPDEP\n25\n\n\nIN.OTH\nIN.OTH\nTMPDEP\nTMPDEP\n6\n\n\n*\n*\nTMPDEP\nTMPDEP\n18\n\n\n*\n*\n*\nTMPDEP\n24\n\n\n*\nSLFSUF\nGOVSUP\nSLFSUF\n5\n\n\n*\nTMPDEP\nSLFSUF\nSLFSUF\n6\n\n\n*\nSLFSUF\nSLFSUF\nSLFSUF\n28\n\n\n*\n*\nSLFSUF\nSLFSUF\n8\n\n\n*\n*\n*\nSLFSUF\n26\n\n\n*\nGOVSUP\nIN.UKR\nIN.UKR\n13\n\n\n*\nTMPDEP\nIN.UKR\nIN.UKR\n16\n\n\n*\nSLFSUF\nIN.UKR\nIN.UKR\n6\n\n\nTMPDEP\nIN.UKR\nIN.UKR\nIN.UKR\n8\n\n\nGOVSUP\nGOVSUP\nGOVSUP\n%\n5\n\n\nTMPDEP\nGOVSUP\nGOVSUP\n%\n10\n\n\n*\nGOVSUP\nGOVSUP\n%\n42\n\n\n*\nTMPDEP\nGOVSUP\n%\n9\n\n\n*\nSLFSUF\nGOVSUP\n%\n10\n\n\n*\n*\nGOVSUP\n%\n37\n\n\n*\nTMPDEP\nTMPDEP\n%\n10\n\n\n*\n*\nTMPDEP\n%\n13\n\n\n*\nGOVSUP\nIN.UKR\n%\n6\n\n\n*\nGOVSUP\n%\n%\n54\n\n\nTMPDEP\nTMPDEP\n%\n%\n6\n\n\n*\nTMPDEP\n%\n%\n26\n\n\nSLFSUF\nSLFSUF\n%\n%\n6\n\n\n*\nSLFSUF\n%\n%\n27\n\n\nGOVSUP\n%\n%\n%\n31\n\n\nTMPDEP\n%\n%\n%\n44\n\n\nSLFSUF\n%\n%\n%\n14\n\n\n\n\n\nMiguel suggested ignore information about the round when respondent joined our sample, concentrating on the sequences of changes themselves\n\n## \nsequence.seq &lt;- seqdef(\n  data = sequence$imp$imp1,\n  var = 1:4,\n  alphabet = sequence.alphabet,\n  states = sequence.scode,\n  labels = sequence.lab,\n  cnames = 1:4,\n  xtstep = 1,\n  cpal = c(\"blue\", \"red\", \"green\", \"yellow\", \"violet\"),\n  left = \"DEL\",\n  right = \"DEL\"\n)\n\n [!] found '-' character in state codes, not recommended\n\n\n [&gt;] found missing values ('NA') in sequence data\n\n\n [&gt;] preparing 1193 sequences\n\n\n [&gt;] coding void elements with '%' and missing values with '*'\n\n\n [!!] 4 empty sequence(s) with index: 8,486,644,1193\n      may produce inconsistent results.\n\n\n [&gt;] state coding:\n\n\n       [alphabet]           [label]  [long label] \n\n\n     1  government supported GOVSUP   government supported\n\n\n     2  temporary/dependent  TMPDEP   temporary/dependent\n\n\n     3  self-sufficient      SLFSUF   self-sufficient\n\n\n     4  in Ukraine           IN.UKR   in Ukraine\n\n\n     5  in other country     IN.OTH   in other country\n\n\n [&gt;] 1193 sequences in the data set\n\n\n [&gt;] min/max sequence length: 0/4\n\n## 25 Most frequent sequences\nseqtab(\n  sequence.seq, idxs = 1:25\n)\n\n                           Freq Percent\nGOVSUP/1                    242   20.28\nGOVSUP/3                    138   11.57\nTMPDEP/1                    107    8.97\nGOVSUP/2                     97    8.13\nSLFSUF/1                     71    5.95\nSLFSUF/1-GOVSUP/2            45    3.77\nTMPDEP/2                     34    2.85\nSLFSUF/3                     32    2.68\nTMPDEP/3                     29    2.43\nTMPDEP/1-GOVSUP/2            25    2.10\nTMPDEP/1-IN.UKR/2            20    1.68\nSLFSUF/2                     18    1.51\nGOVSUP/1-IN.UKR/2            15    1.26\nGOVSUP/4                     15    1.26\nSLFSUF/1-GOVSUP/1            14    1.17\nTMPDEP/1-GOVSUP/1            14    1.17\nTMPDEP/1-GOVSUP/3            14    1.17\nTMPDEP/2-GOVSUP/1            11    0.92\nSLFSUF/2-GOVSUP/2             8    0.67\nTMPDEP/1-IN.UKR/3             8    0.67\nTMPDEP/4                      8    0.67\nTMPDEP/1-SLFSUF/2             7    0.59\nGOVSUP/1-IN.UKR/1             6    0.50\nIN.OTH/2-TMPDEP/2             6    0.50\nSLFSUF/1-GOVSUP/1-SLFSUF/1    6    0.50\n\nseqplot(\n  seqdata = sequence.seq,\n  type = \"f\",\n  idxs = 1:25,\n  with.legend = FALSE, border = FALSE,\n  cex.axis = 0.65,\n  main = \"25 most frequent sequences\"\n)\n\n\n\n\n\n\n\n# Sorted by end state\nseqplot(\n  seqdata = sequence.seq,\n  type = \"I\",\n  idxs = 0,\n  with.legend = FALSE,\n  sortv = sortv(sequence.seq, start = \"end\"),\n  cex.axis = 0.65,\n  main = \"Sequences sorted by end state\"\n)\n\n\n\n\n\n\n\n\nSame information, but presented in a frequency table:\n\ndf &lt;- data.frame(table(sequence.seq))\nknitr::kable(\n  x = df %&gt;% filter(Freq &gt; 4),\n  caption = \"Sequences sorted by end state\"\n)\n\n\nSequences sorted by end state\n\n\nX1\nX2\nX3\nX4\nFreq\n\n\n\n\nGOVSUP\nGOVSUP\nGOVSUP\nGOVSUP\n15\n\n\nTMPDEP\nGOVSUP\nGOVSUP\nGOVSUP\n14\n\n\nSLFSUF\nGOVSUP\nGOVSUP\nGOVSUP\n5\n\n\nTMPDEP\nTMPDEP\nGOVSUP\nGOVSUP\n6\n\n\nIN.OTH\nTMPDEP\nGOVSUP\nGOVSUP\n5\n\n\nTMPDEP\nSLFSUF\nGOVSUP\nGOVSUP\n5\n\n\nSLFSUF\nSLFSUF\nGOVSUP\nGOVSUP\n8\n\n\nTMPDEP\nTMPDEP\nTMPDEP\nTMPDEP\n8\n\n\nIN.OTH\nIN.OTH\nTMPDEP\nTMPDEP\n6\n\n\nTMPDEP\nIN.UKR\nIN.UKR\nIN.UKR\n8\n\n\nGOVSUP\nGOVSUP\nGOVSUP\n%\n138\n\n\nTMPDEP\nGOVSUP\nGOVSUP\n%\n25\n\n\nSLFSUF\nGOVSUP\nGOVSUP\n%\n45\n\n\nTMPDEP\nTMPDEP\nGOVSUP\n%\n11\n\n\nIN.OTH\nIN.OTH\nGOVSUP\n%\n5\n\n\nTMPDEP\nTMPDEP\nTMPDEP\n%\n29\n\n\nSLFSUF\nGOVSUP\nSLFSUF\n%\n6\n\n\nTMPDEP\nSLFSUF\nSLFSUF\n%\n7\n\n\nSLFSUF\nSLFSUF\nSLFSUF\n%\n32\n\n\nGOVSUP\nIN.UKR\nIN.UKR\n%\n15\n\n\nTMPDEP\nIN.UKR\nIN.UKR\n%\n20\n\n\nSLFSUF\nIN.UKR\nIN.UKR\n%\n6\n\n\nGOVSUP\nGOVSUP\n%\n%\n97\n\n\nTMPDEP\nGOVSUP\n%\n%\n14\n\n\nSLFSUF\nGOVSUP\n%\n%\n14\n\n\nTMPDEP\nTMPDEP\n%\n%\n34\n\n\nTMPDEP\nSLFSUF\n%\n%\n5\n\n\nSLFSUF\nSLFSUF\n%\n%\n18\n\n\nGOVSUP\nIN.UKR\n%\n%\n6\n\n\nGOVSUP\n%\n%\n%\n242\n\n\nTMPDEP\n%\n%\n%\n107\n\n\nSLFSUF\n%\n%\n%\n71",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Accommodation in Germany</span>"
    ]
  }
]